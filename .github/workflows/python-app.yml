# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '0 1 * * *'

permissions:
  contents: read

jobs:
  dump:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: "pip"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
    - name: Dump
      run: |
        echo "Running on a $(uname -a) from $(pwd) on machine $(hostname)"
        ls -l
        echo "Started at $(date)"
        echo "Downloading database dump"
        backend/dump.py --start 2023-01-01 --end $(date +%Y-%m-%d) --overwrite
        ls -l
        echo "Finished at $(date)"
    - name: Analyze
      run: |
        echo "Running on a $(uname -a) from $(pwd) on machine $(hostname)"
        ls -l
        echo "Started at $(date)"
        echo "Analyzing database dump"
        backend/create_json.py
        ls -l
        echo "Finished at $(date)"
    - name: Deploy to s3
      run: |
        sudo apt-get update
        sudo apt-get install -y libs3-2
        s3 delete localgroupdisk-data/data.json
        s3 delete localgroupdisk-data/data_scatter.json
        s3 delete localgroupdisk-data/data_pie.json
        s3 delete localgroupdisk-data/data_all.json
        s3 put localgroupdisk-data/data.json filename=data.json
        s3 put localgroupdisk-data/data_scatter.json filename=data_scatter.json
        s3 put localgroupdisk-data/data_pie.json filename=data_pie.json
        s3 put localgroupdisk-data/data_all.json filename=data_all.json
      env:
        S3_HOSTNAME: rgw.fisica.unimi.it
        S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
        S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}

    
